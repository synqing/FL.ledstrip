; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32dev
description = Light Crystals - Modular LED Control System

[env:esp32dev]
platform = espressif32@6.5.0
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.partitions = partitions_4mb.csv
board_build.filesystem = spiffs
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_mode = dio

; Build flags
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++17
    -D ARDUINO_USB_CDC_ON_BOOT=1
    -D ARDUINO_USB_MODE=1
    -D DISABLE_ALL_LIBRARY_WARNINGS
    -D CORE_DEBUG_LEVEL=2
    -D CONFIG_ASYNC_TCP_RUNNING_CORE=1
    -D CONFIG_ASYNC_TCP_USE_WDT=0
    ; Feature flags
    -D FEATURE_WEB_SERVER=0       ; Disabled for now
    -D FEATURE_SERIAL_MENU=1
    -D FEATURE_PERFORMANCE_MONITOR=1
    -D FEATURE_ADVANCED_EFFECTS=1
    -D FEATURE_PIPELINE_EFFECTS=1
    ; Hardware config (removed - now in hardware_config.h)

; Library dependencies
lib_deps = 
    fastled/FastLED@3.6.0
    bblanchon/ArduinoJson@7.0.4
    ; These are commented out since web server is disabled
    ; me-no-dev/AsyncTCP@^1.1.1
    ; me-no-dev/ESP Async WebServer@^1.2.3

; Source filter
build_src_filter = 
    +<*>
    -<.git/>
    -<.svn/>
    -<network/>

; Library options - exclude test and example files
lib_ldf_mode = deep
lib_ignore = 
    ArduinoJson/extras
    ArduinoJson/examples
    AsyncTCP/examples
    ESP_Async_WebServer/examples
    FastLED/examples
    FastLED/tests
    M5GFX/examples
    M5ROTATE8/examples
    M5Unified/examples

; Custom upload port - USING USBMODEM1101 AS SPECIFIED
; upload_port = /dev/cu.usbmodem1101
; monitor_port = /dev/cu.usbmodem1101

; Monitor filters
monitor_filters = 
    esp32_exception_decoder
    colorize
    time
    default

; Additional monitor settings for USB CDC
monitor_dtr = 1
monitor_rts = 1

[env:esp32dev_debug]
extends = env:esp32dev
build_type = debug
build_flags = 
    ${env:esp32dev.build_flags}
    -D DEBUG=1
    -D CORE_DEBUG_LEVEL=5
